{"ast":null,"code":"var _jsxFileName = \"/Users/christianznidarsic/Desktop/ReservoirApp/reservoir-app/src/components/Main.js\",\n  _s = $RefreshSig$();\nimport '../App.css';\nimport ReservoirData from './ReservoirData';\nimport reservoirIDs from '../constants/reservoirIDs';\nimport axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Main() {\n  _s();\n  // const [data, setData] = useState([]);\n  // const [loading, setLoading] = useState(true);\n  // const [error, setError] = useState(null);\n\n  useEffect(() => {\n    axios.get('https://jsonplaceholder.typicode.com/todos/1').then(response => {\n      console.log(response);\n      // response.json()\n      // setData(response.data);\n      // console.log(setData)\n    })\n    // .then(json => {\n    //     console.log(json)\n    // })\n    .catch(error => {\n      console.log(error);\n      // setError(error);\n      // setLoading(false);\n    });\n  });\n\n  // if (loading) {\n  //     return <p>Loading...</p>;\n  // }\n\n  // if (error) {\n  //     return <p>Error: {error.message}</p>;\n  // }\n\n  // return (\n  //     <div>\n  //         <h1>API Response:</h1>\n  //         <ul>\n  //             {data.map(item => (\n  //                 <li key={item.id}>{item.title}</li>\n  //             ))}\n  //         </ul>\n  //     </div>\n  // );\n\n  const resCards = reservoirIDs.map(res => {\n    return /*#__PURE__*/_jsxDEV(ReservoirData, {\n      name: res.name,\n      id: res.id\n    }, res.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this);\n  });\n  const clickHandler = () => {\n    console.log(\"clicked!\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App-background\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: clickHandler,\n        children: \"Click me!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), resCards]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n}\n_s(Main, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["ReservoirData","reservoirIDs","axios","React","useState","useEffect","jsxDEV","_jsxDEV","Main","_s","get","then","response","console","log","catch","error","resCards","map","res","name","id","fileName","_jsxFileName","lineNumber","columnNumber","clickHandler","className","children","onClick","_c","$RefreshReg$"],"sources":["/Users/christianznidarsic/Desktop/ReservoirApp/reservoir-app/src/components/Main.js"],"sourcesContent":["import '../App.css';\nimport ReservoirData from './ReservoirData';\nimport reservoirIDs from '../constants/reservoirIDs';\nimport axios from 'axios';\nimport React, { useState, useEffect } from 'react';\n\nfunction Main() {\n\n    // const [data, setData] = useState([]);\n    // const [loading, setLoading] = useState(true);\n    // const [error, setError] = useState(null);\n\n    useEffect(() => {\n        axios.get('https://jsonplaceholder.typicode.com/todos/1')\n            .then(response => {\n                console.log(response);\n                // response.json()\n                // setData(response.data);\n                // console.log(setData)\n            })\n            // .then(json => {\n            //     console.log(json)\n            // })\n            .catch(error => {\n                console.log(error)\n                // setError(error);\n                // setLoading(false);\n            })\n    })\n\n    // if (loading) {\n    //     return <p>Loading...</p>;\n    // }\n\n    // if (error) {\n    //     return <p>Error: {error.message}</p>;\n    // }\n\n    // return (\n    //     <div>\n    //         <h1>API Response:</h1>\n    //         <ul>\n    //             {data.map(item => (\n    //                 <li key={item.id}>{item.title}</li>\n    //             ))}\n    //         </ul>\n    //     </div>\n    // );\n\n    const resCards = reservoirIDs.map((res) => {\n        return (\n            <ReservoirData name={res.name} id={res.id} key={res.id} />\n        )\n    }\n    )\n\n    const clickHandler = () => {\n        console.log(\"clicked!\");\n    }\n\n    return (\n        <div className=\"App\">\n            <div className=\"App-background\">\n                <button onClick={clickHandler}>Click me!</button>\n                {resCards}\n            </div>\n        </div >\n    );\n}\n\nexport default Main;"],"mappings":";;AAAA,OAAO,YAAY;AACnB,OAAOA,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,YAAY,MAAM,2BAA2B;AACpD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EAEZ;EACA;EACA;;EAEAJ,SAAS,CAAC,MAAM;IACZH,KAAK,CAACQ,GAAG,CAAC,8CAA8C,CAAC,CACpDC,IAAI,CAACC,QAAQ,IAAI;MACdC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;MACrB;MACA;MACA;IACJ,CAAC;IACD;IACA;IACA;IAAA,CACCG,KAAK,CAACC,KAAK,IAAI;MACZH,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC;MAClB;MACA;IACJ,CAAC,CAAC;EACV,CAAC,CAAC;;EAEF;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAMC,QAAQ,GAAGhB,YAAY,CAACiB,GAAG,CAAEC,GAAG,IAAK;IACvC,oBACIZ,OAAA,CAACP,aAAa;MAACoB,IAAI,EAAED,GAAG,CAACC,IAAK;MAACC,EAAE,EAAEF,GAAG,CAACE;IAAG,GAAMF,GAAG,CAACE,EAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAElE,CACA,CAAC;EAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACvBb,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;EAC3B,CAAC;EAED,oBACIP,OAAA;IAAKoB,SAAS,EAAC,KAAK;IAAAC,QAAA,eAChBrB,OAAA;MAAKoB,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC3BrB,OAAA;QAAQsB,OAAO,EAAEH,YAAa;QAAAE,QAAA,EAAC;MAAS;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EAChDR,QAAQ;IAAA;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEf;AAAChB,EAAA,CA9DQD,IAAI;AAAAsB,EAAA,GAAJtB,IAAI;AAgEb,eAAeA,IAAI;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}