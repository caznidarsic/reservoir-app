{"ast":null,"code":"var _jsxFileName = \"/Users/christianznidarsic/Desktop/ReservoirApp/reservoir-app/src/components/ReservoirData.js\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ReservoirData(props) {\n  _s();\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const url = '/dynamicapp/req/JSONDataServlet?Stations=ORO&SensorNums=15&dur_code=D&Start=2022-07-24&End=2023-08-24';\n    axios.get(url).then(response => {\n      setData(response.data);\n      console.log(data);\n      setLoading(false);\n    }).catch(error => {\n      console.log(error);\n      setError(error);\n      setLoading(false);\n    });\n  }, []);\n  function formatDateString(dateString) {\n    const date = new Date(dateString);\n    return date.toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'numeric',\n      day: 'numeric'\n    });\n  }\n  const formattedData = data.map(item => ({\n    stationId: item.stationId,\n    value: item.value,\n    date: formatDateString(item.date)\n  }));\n  console.log(formattedData);\n  const renderLineChart = /*#__PURE__*/_jsxDEV(LineChart, {\n    width: 600,\n    height: 400,\n    data: formattedData,\n    children: [/*#__PURE__*/_jsxDEV(Line, {\n      type: \"monotone\",\n      dataKey: \"value\",\n      stroke: \"#8884d8\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CartesianGrid, {\n      stroke: \"#ccc\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n      label: {\n        value: \"Date\",\n        dy: 25\n      },\n      dataKey: \"date\",\n      tick: {\n        fontSize: 12\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n      label: {\n        value: \"Current Value (AF)\",\n        dx: -60,\n        angle: -90\n      },\n      tick: {\n        fontSize: 12\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 16\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ReservoirCard\",\n    children: /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [props.name, renderLineChart]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n}\n_s(ReservoirData, \"C4fiAW6C7RZgaKDoEXQgZpbuUZg=\");\n_c = ReservoirData;\nexport default ReservoirData;\nvar _c;\n$RefreshReg$(_c, \"ReservoirData\");","map":{"version":3,"names":["axios","React","useState","useEffect","LineChart","Line","CartesianGrid","XAxis","YAxis","jsxDEV","_jsxDEV","ReservoirData","props","_s","data","setData","loading","setLoading","error","setError","url","get","then","response","console","log","catch","formatDateString","dateString","date","Date","toLocaleDateString","year","month","day","formattedData","map","item","stationId","value","renderLineChart","width","height","children","type","dataKey","stroke","fileName","_jsxFileName","lineNumber","columnNumber","label","dy","tick","fontSize","dx","angle","message","className","name","_c","$RefreshReg$"],"sources":["/Users/christianznidarsic/Desktop/ReservoirApp/reservoir-app/src/components/ReservoirData.js"],"sourcesContent":["import axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis } from 'recharts';\n\nfunction ReservoirData(props) {\n\n    const [data, setData] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        const url = '/dynamicapp/req/JSONDataServlet?Stations=ORO&SensorNums=15&dur_code=D&Start=2022-07-24&End=2023-08-24';\n        axios.get(url)\n            .then(response => {\n                setData(response.data);\n                console.log(data);\n                setLoading(false);\n            })\n            .catch(error => {\n                console.log(error)\n                setError(error);\n                setLoading(false);\n            })\n    }, [])\n\n    function formatDateString(dateString) {\n        const date = new Date(dateString)\n        return date.toLocaleDateString('en-US', {\n            year: 'numeric',\n            month: 'numeric',\n            day: 'numeric',\n        })\n    }\n\n    const formattedData = data.map(item => ({\n        stationId: item.stationId,\n        value: item.value,\n        date: formatDateString(item.date)\n    }))\n\n    console.log(formattedData);\n\n    const renderLineChart = (\n        <LineChart width={600} height={400} data={formattedData} >\n            <Line type=\"monotone\" dataKey=\"value\" stroke=\"#8884d8\" />\n            <CartesianGrid stroke=\"#ccc\" />\n            <XAxis label={{ value: \"Date\", dy: 25 }} dataKey=\"date\" tick={{ fontSize: 12 }} />\n            <YAxis label={{ value: \"Current Value (AF)\", dx: -60, angle: -90 }} tick={{ fontSize: 12 }} />\n        </LineChart>\n    );\n\n\n    if (loading) {\n        return <div>\n            <h1>\n                Loading...\n            </h1>\n        </div>;\n    }\n\n    if (error) {\n        return <p>Error: {error.message}</p>;\n    }\n\n    return (\n        <div className=\"ReservoirCard\">\n            <h3>\n                {props.name}\n                {renderLineChart}\n\n                {/* <div>\n                    <ul>\n                        {data.map(item => (\n                            <li >{item.value}</li>\n                        ))}\n                    </ul>\n                </div> */}\n\n            </h3>\n        </div>\n    )\n}\n\nexport default ReservoirData;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}