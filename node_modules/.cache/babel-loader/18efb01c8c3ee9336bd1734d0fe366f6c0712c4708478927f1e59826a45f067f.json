{"ast":null,"code":"var _jsxFileName = \"/Users/christianznidarsic/Desktop/reservoir-app/src/components/ReservoirData.js\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis } from 'recharts';\nimport Select from 'react-select';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ReservoirData(props) {\n  _s();\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [chartRange, setChartRange] = useState('1 year');\n  const options = [\n  // { value: '6 months', label: '6 months' },\n  {\n    value: '1 year',\n    label: '1 year'\n  }, {\n    value: '2 years',\n    label: '2 years'\n  }];\n  const customStyles = {\n    control: provided => ({\n      ...provided,\n      fontSize: '16px',\n      // Adjust the text size as needed\n      height: '20px',\n      // Adjust the height as needed\n      width: '150px'\n    }),\n    menu: provided => ({\n      ...provided,\n      fontSize: '16px',\n      width: '150px'\n    })\n  };\n  function updateRange(newRange) {\n    setChartRange(newRange.value);\n    console.log(newRange.value);\n  }\n  useEffect(() => {\n    // const url = `/dynamicapp/req/JSONDataServlet?Stations=${props.id}&SensorNums=15&dur_code=${(chartRange === '6 months' ? 'D' : 'M')}&${getDateRange()}`;\n    const url = `https://www.reservoirapi.christianznidarsic.com/resdata?stationid=${props.id}&span=2`;\n    console.log(url);\n    axios.get(url).then(response => {\n      // setData(cleanData(response.data));\n      setData(response.data);\n\n      // console.log(data);\n      setLoading(false);\n    }).catch(error => {\n      console.log(error);\n      setError(error);\n      setLoading(false);\n    });\n  }, []);\n  const renderLineChart = /*#__PURE__*/_jsxDEV(LineChart, {\n    className: \"line-chart\",\n    width: 900,\n    height: 300,\n    data: chartRange === '1 year' ? data.slice(12, 23) : data.slice(0, 23),\n    margin: {\n      top: 20,\n      right: 20,\n      left: 50,\n      bottom: 30\n    },\n    children: [/*#__PURE__*/_jsxDEV(Line, {\n      type: \"monotone\",\n      dataKey: \"value\",\n      stroke: \"#8884d8\",\n      isAnimationActive: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CartesianGrid, {\n      stroke: \"#ccc\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n      label: {\n        dy: 25,\n        fontSize: 20\n      },\n      dataKey: \"date\",\n      interval: 5,\n      tick: {\n        fontSize: 12\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n      label: {\n        value: \"Current Storage (AF)\",\n        dx: -60,\n        angle: -90,\n        fontSize: 20\n      },\n      tick: {\n        fontSize: 12\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 16\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ReservoirCard\",\n    children: /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [props.name, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-container\",\n        children: [renderLineChart, /*#__PURE__*/_jsxDEV(Select, {\n          className: \"right-justified-select\",\n          options: options,\n          styles: customStyles,\n          fontSize: \"12\",\n          defaultValue: options[0],\n          onChange: updateRange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n}\n_s(ReservoirData, \"zMNZgBIXgPuIOrs8hR5RioL74Rs=\");\n_c = ReservoirData;\nexport default ReservoirData;\nvar _c;\n$RefreshReg$(_c, \"ReservoirData\");","map":{"version":3,"names":["axios","React","useState","useEffect","LineChart","Line","CartesianGrid","XAxis","YAxis","Select","jsxDEV","_jsxDEV","ReservoirData","props","_s","data","setData","loading","setLoading","error","setError","chartRange","setChartRange","options","value","label","customStyles","control","provided","fontSize","height","width","menu","updateRange","newRange","console","log","url","id","get","then","response","catch","renderLineChart","className","slice","margin","top","right","left","bottom","children","type","dataKey","stroke","isAnimationActive","fileName","_jsxFileName","lineNumber","columnNumber","dy","interval","tick","dx","angle","message","name","styles","defaultValue","onChange","_c","$RefreshReg$"],"sources":["/Users/christianznidarsic/Desktop/reservoir-app/src/components/ReservoirData.js"],"sourcesContent":["import axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis } from 'recharts';\nimport Select from 'react-select';\n\nfunction ReservoirData(props) {\n\n    const [data, setData] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n    const [chartRange, setChartRange] = useState('1 year');\n\n    const options = [\n        // { value: '6 months', label: '6 months' },\n        { value: '1 year', label: '1 year' },\n        { value: '2 years', label: '2 years' }\n    ]\n\n    const customStyles = {\n        control: (provided) => ({\n            ...provided,\n            fontSize: '16px', // Adjust the text size as needed\n            height: '20px',  // Adjust the height as needed\n            width: '150px'\n        }),\n        menu: (provided) => ({\n            ...provided,\n            fontSize: '16px',\n            width: '150px',\n        })\n    };\n\n    function updateRange(newRange) {\n        setChartRange(newRange.value);\n        console.log(newRange.value);\n    }\n\n    useEffect(() => {\n        // const url = `/dynamicapp/req/JSONDataServlet?Stations=${props.id}&SensorNums=15&dur_code=${(chartRange === '6 months' ? 'D' : 'M')}&${getDateRange()}`;\n        const url = `https://www.reservoirapi.christianznidarsic.com/resdata?stationid=${props.id}&span=2`\n        console.log(url)\n        axios.get(url)\n            .then(response => {\n                // setData(cleanData(response.data));\n                setData(response.data);\n\n                // console.log(data);\n                setLoading(false);\n            })\n            .catch(error => {\n                console.log(error)\n                setError(error);\n                setLoading(false);\n            })\n\n    }, [])\n\n    const renderLineChart = (\n        <LineChart className=\"line-chart\" width={900} height={300} data={(chartRange === '1 year' ? data.slice(12, 23) : data.slice(0, 23))} margin={{ top: 20, right: 20, left: 50, bottom: 30 }}>\n            <Line type=\"monotone\" dataKey=\"value\" stroke=\"#8884d8\" isAnimationActive={false} />\n            <CartesianGrid stroke=\"#ccc\" />\n            <XAxis label={{ dy: 25, fontSize: 20 }} dataKey=\"date\" interval={5} tick={{ fontSize: 12 }} />\n            <YAxis label={{ value: \"Current Storage (AF)\", dx: -60, angle: -90, fontSize: 20 }} tick={{ fontSize: 12 }} />\n        </LineChart >\n    );\n\n\n    if (loading) {\n        return <div>\n            <h1>\n                Loading...\n            </h1>\n        </div>;\n    }\n\n    if (error) {\n        return <p>Error: {error.message}</p>;\n    }\n\n    return (\n        <div className=\"ReservoirCard\">\n            <h3>\n                {props.name}\n                <div className=\"chart-container\">\n                    {renderLineChart}\n                    <Select className=\"right-justified-select\" options={options} styles={customStyles} fontSize='12' defaultValue={options[0]} onChange={updateRange} />\n\n                </div>\n            </h3>\n        </div>\n    )\n}\n\nexport default ReservoirData;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}